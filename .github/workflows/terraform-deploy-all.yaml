name: Deploy All Environments

on:
  workflow_dispatch:
    inputs:
      import_enabled:
        required: false
        type: boolean
        default: false
      action:
        description: 'Terraform action to perform (apply or destroy)'
        required: true
        default: 'apply'
        type: choice
        options:
          - apply
          - destroy

  pull_request:
    branches:
      - main

  push:
    branches:
      - main

jobs:
  # Manual approval jobs
  approve-platform:
    name: Approve Platform LZ Deployment
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Manual Approval for Platform LZ
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.token }}
          approvers: ${{ github.actor }}
          minimum-approvals: 1
          issue-title: "Manual approval for Platform LZ ${{ github.event.inputs.action }}"
          issue-body: |
            **Environment**: Platform Landing Zone
            **Action**: ${{ github.event.inputs.action }}
            **Triggered by**: @${{ github.actor }}
            **Workflow**: ${{ github.workflow }}
            
            Please review and approve the Platform Landing Zone deployment.
            
            This will ${{ github.event.inputs.action }} the Platform Landing Zone infrastructure.

  approve-corp:
    name: Approve Corp LZ Deployment  
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Manual Approval for Corp LZ
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.token }}
          approvers: ${{ github.actor }}
          minimum-approvals: 1
          issue-title: "Manual approval for Corp LZ ${{ github.event.inputs.action }}"
          issue-body: |
            **Environment**: Corp Landing Zone
            **Action**: ${{ github.event.inputs.action }}
            **Triggered by**: @${{ github.actor }}
            **Workflow**: ${{ github.workflow }}
            
            Please review and approve the Corp Landing Zone deployment.
            
            This will ${{ github.event.inputs.action }} the Corp Landing Zone infrastructure.

  approve-online:
    name: Approve Online LZ Deployment
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    steps:
      - name: Manual Approval for Online LZ
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ github.token }}
          approvers: ${{ github.actor }}
          minimum-approvals: 1
          issue-title: "Manual approval for Online LZ ${{ github.event.inputs.action }}"
          issue-body: |
            **Environment**: Online Landing Zone
            **Action**: ${{ github.event.inputs.action }}
            **Triggered by**: @${{ github.actor }}
            **Workflow**: ${{ github.workflow }}
            
            Please review and approve the Online Landing Zone deployment.
            
            This will ${{ github.event.inputs.action }} the Online Landing Zone infrastructure.

  platform:
    name: Platform LZ
    needs: [approve-platform]
    if: always() && (github.event_name != 'workflow_dispatch' || needs.approve-platform.result == 'success')
    uses: ./.github/workflows/terraform-workflow.yaml
    with:
      environment: platform
      action: ${{ github.event.inputs.action }}
      import_enabled : false
    secrets:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
       # Backend SPN (for terraform backend)
      ARM_BACKEND_CLIENT_ID: ${{ secrets.ARM_BACKEND_CLIENT_ID }}
      ARM_BACKEND_CLIENT_SECRET: ${{ secrets.ARM_BACKEND_CLIENT_SECRET }}
      ARM_BACKEND_TENANT_ID: ${{ secrets.ARM_BACKEND_TENANT_ID }}
      ARM_BACKEND_SUBSCRIPTION_ID: ${{ secrets.ARM_BACKEND_SUBSCRIPTION_ID }}

  corp:
    name: Corp LZ
    needs: [platform, approve-corp]
    if: always() && (github.event_name != 'workflow_dispatch' || needs.approve-corp.result == 'success') && (needs.platform.result == 'success')
    uses: ./.github/workflows/terraform-workflow.yaml
    with:
      environment: corp
      action: ${{ github.event.inputs.action }}
      import_enabled : false
    secrets:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
       # Backend SPN (for terraform backend)
      ARM_BACKEND_CLIENT_ID: ${{ secrets.ARM_BACKEND_CLIENT_ID }}
      ARM_BACKEND_CLIENT_SECRET: ${{ secrets.ARM_BACKEND_CLIENT_SECRET }}
      ARM_BACKEND_TENANT_ID: ${{ secrets.ARM_BACKEND_TENANT_ID }}
      ARM_BACKEND_SUBSCRIPTION_ID: ${{ secrets.ARM_BACKEND_SUBSCRIPTION_ID }}

  online:
    name: Online LZ
    needs: [platform, approve-online]
    if: always() && (github.event_name != 'workflow_dispatch' || needs.approve-online.result == 'success') && (needs.platform.result == 'success')
    uses: ./.github/workflows/terraform-workflow.yaml
    with:
      environment: online
      action: ${{ github.event.inputs.action }}
      import_enabled : false
    secrets:
      ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
      # Backend SPN (for terraform backend)
      ARM_BACKEND_CLIENT_ID: ${{ secrets.ARM_BACKEND_CLIENT_ID }}
      ARM_BACKEND_CLIENT_SECRET: ${{ secrets.ARM_BACKEND_CLIENT_SECRET }}
      ARM_BACKEND_TENANT_ID: ${{ secrets.ARM_BACKEND_TENANT_ID }}
      ARM_BACKEND_SUBSCRIPTION_ID: ${{ secrets.ARM_BACKEND_SUBSCRIPTION_ID }}

